{"version":3,"sources":["components/sidePanel/SidePanel.js","components/charts/Timeline.js","components/charts/Archetypes.js","components/charts/TechStack.js","components/canvas/Canvas.js","components/canvas/Header.js","components/app/App.js","serviceWorker.js","index.js"],"names":["SidePanel","Container","fluid","Row","Col","className","this","props","data","role","id","org","start","end","startString","endString","months","startDate","Date","getMonth","getFullYear","endDate","formatDate","start_date","end_date","description","Component","colors","Archetypes","containerComponent","radius","style","parent","background","borderRadius","width","text","x","y","textAnchor","fontSize","fill","fontFamily","fontWeight","axis","stroke","ticks","tickLabels","summary","map","item","innerRadius","archetypes","colorScale","labels","TechStack","state","filteredData","nextProps","tech","setState","domainPadding","entry","index","barWidth","slice","labelComponent","dx","dy","verticalAnchor","Canvas","Header","md","href","App","clicked","updateClicked","bind","externalMutations","undefined","datum","childName","target","eventKey","toString","mutation","externalEventMutations","events","eventHandlers","onClick","event","orientation","gutter","title","name","symbol","type","dependentAxis","scale","tickValues","tickFormat","horizontal","domain","work","d","y0","constrainToVisibleArea","pointerLength","flyoutStyle","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60d63fd8.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './SidePanel.scss';\n\nfunction formatDate(start, end) {\n  // if start is null, default to June 1996\n  // if end is null, default to Present\n  var startString = \"June 1996\";\n  var endString = \"Present\";\n\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  if (start != null) {\n    var startDate = new Date(start);\n\n    // parse start date\n    var startMonth = months[startDate.getMonth()];\n    var startYear = startDate.getFullYear();\n    var startString = startMonth + ' ' + startYear;\n  }\n\n  if (end != null) {\n    var endDate = new Date(end);\n    var endMonth = months[endDate.getMonth()];\n    var endYear = endDate.getFullYear();\n    endString = endMonth + ' ' + endYear;\n  }\n\n  return startString + ' - ' + endString;\n}\n\nclass SidePanel extends Component {\n  render(){\n    return(\n      <Container fluid>\n        <Row>\n          <Col className=\"titles\">\n            <h1>{(this.props.data.role || \"Product Manager. Data Analyst. Enigmatologist.\")}</h1>\n            <h5 id=\"location\">{(this.props.data.org|| \"Charlotte, NC\")}</h5>\n            <h5 id=\"duration\">{(formatDate(this.props.data.start_date, this.props.data.end_date))}</h5>\n          </Col>\n        </Row>\n        <Row>\n         <Col className=\"details\">\n             <p>{(this.props.data.description || \"Hi! I'm Sam. Take a look around at my adventure so far, then get in touch to learn more.\")}</p>\n         </Col>\n       </Row>\n       {/* <Row className=\"justify-content-md-center align-middle\">\n         <Col md=\"auto\"><button id=\"detailContact\"><a href=\"mailto:hello@samepetrie.com\">Contact Sam</a></button></Col>\n       </Row> */}\n      </Container>\n    );\n}\n}\n\n// const SidePanel = () => (\n//   <Container fluid>\n//       <Row>\n//           <Col className=\"titles\">\n//             <h1>Product Manager.</h1>\n//             <h1>Data Analyst.</h1>\n//             <h1>Enigmatologist.</h1>\n//             <h5>CHARLOTTE, NC</h5>\n//           </Col>\n//       </Row>\n//       <Row>\n//         <Col className=\"details\">\n//             <p>Hi! I'm Sam. Take a look around at my adventure so far, then get in touch to learn more!</p>\n//         </Col>\n//       </Row>\n//       <Row className=\"justify-content-md-center align-middle\">\n//         <Col md=\"auto\"><button id=\"detailContact\"><a href=\"mailto:hello@samepetrie.com\">Contact Sam</a></button></Col>\n//       </Row>\n//   </Container>\n// )\n\nexport default SidePanel","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLegend, VictoryVoronoiContainer, VictoryLabel } from 'victory';\nimport './Timeline.scss';\nimport work from '../../data/Timeline.json'\n\nconst edu = [{\n  \"category\": 3,\n  \"role\": \"B.S. Computer Science\",\n  \"org\": \"University of North Carolina - Chapel Hill\",\n  \"start_date\": new Date(2014, 6, 14),\n  \"end_date\": new Date(2018, 5, 13)\n}]\n\nconst Timeline = () => (\n  <Container fluid>\n    {/* <Row className=\"Section\">\n      <Col md={2}>\n        <h2 id=\"sectionTitle\">SUMMARY</h2>\n      </Col>\n      <Col md={10}>\n        <div className=\"Divider\"></div>\n      </Col>\n    </Row> */}\n    <Row className=\"TimelineChart\">\n      <Col>\n        <VictoryChart \n          containerComponent={<VictoryVoronoiContainer radius = {2}/>}\n          style={{\n            parent: {\n              background: \"#FFFFFF\",\n              borderRadius: \"6px\"\n            }\n          }}\n          width={1000}\n          >\n            <VictoryLabel \n              text=\"Timeline\" \n              x={30} \n              y={30} \n              textAnchor=\"start\" \n              style={{ \n                  fontSize: 20,\n                  fill: \"#393D3F\",\n                  fontFamily: \"Quicksand\",\n                  fontWeight: \"bold\"\n              }}\n            />\n          <VictoryLegend x={800} y={15}\n            orientation=\"horizontal\"\n            gutter={20}\n            style={{ title: {fontSize: 14} }}\n            data={[\n              { name: \"Education\", symbol: { fill: \"#83C5BE\", type: \"square\"} },\n              { name: \"Work\", symbol: { fill: \"#006D77\", type: \"square\"} },\n            ]}\n          />\n          <VictoryAxis\n            dependentAxis\n            scale=\"time\"\n            tickValues={\n              [\n                new Date(2014, 1, 1), \n                new Date(2015, 1, 1), \n                new Date(2016, 1, 1), \n                new Date(2017, 1, 1), \n                new Date(2018, 1, 1),\n                new Date(2019, 1, 1),\n                new Date(2020, 1, 1),\n                new Date(2021, 1, 1)\n              ]\n            }\n            tickFormat={\n              (x) => { return x.getFullYear();\n              }\n            }\n          />\n          <VictoryBar\n            name = \"workTimeline\"\n            scale={{ x: \"linear\", y: \"time\" }}\n            horizontal\n            domain={{ y: [new Date(2014, 1, 1), new Date(2021, 1, 1)], x: [0, 3.5] }}\n            data={work}\n            style={{ \n              data: { \n                fill: \"#006D77\"\n              }, \n              labels: {\n                fontSize: 14,\n                fill: \"#393D3F\",\n                fontFamily: \"Quicksand\"\n              }\n            }}\n            barWidth={15}\n            x=\"category\"\n            y={(d) => new Date(d.start_date)}\n            y0={(d) => new Date(d.end_date)}\n            labels={({ datum }) => `${datum.role} \\n ${datum.org}`}\n            labelComponent={ \n              <VictoryTooltip \n                dy={15} \n                constrainToVisibleArea\n                orientation=\"bottom\" \n                pointerLength={0}\n                flyoutStyle={{ fill: \"#F4F4F9\", stroke: \"#006D77\"}}\n              /> \n            }\n            events={[\n              {\n                target: \"data\",\n                eventHandlers: {\n                  onMouseOver: () => {\n                    return [{\n                      target: \"labels\",\n                      mutation: (props) => {\n                        return props.text === \"clicked\" ?\n                          null : { text: \"clicked\" }\n                      }\n                    }];\n                  }\n                }\n              }\n            ]}\n          />\n          <VictoryBar\n            name=\"eduTimeline\"\n            domain={{ y: [new Date(2014, 1, 1), new Date(2021, 1, 1)] }}\n            scale={{x: \"linear\", y: \"time\"}}\n            style={{ \n              data: { \n                fill: \"#83C5BE\"\n              },\n              labels: {\n                fontSize: 14,\n                fill: \"#393D3F\",\n                fontFamily: \"Quicksand\"\n              }\n            }}\n            horizontal\n            data={edu}\n            barWidth={15}\n            x=\"category\"\n            y=\"start_date\"\n            y0=\"end_date\"\n            labels={({ datum }) => `${datum.role} \\n ${datum.org}`}\n            labelComponent={ \n              <VictoryTooltip \n                dy={15} \n                constrainToVisibleArea\n                orientation=\"bottom\" \n                pointerLength={0}\n                flyoutStyle={{ fill: \"#F4F4F9\", stroke: \"#83C5BE\"}}\n              />  \n            }\n          />\n        </VictoryChart>\n      </Col>\n    </Row>\n  </Container>\n)\n\nexport default Timeline","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { VictoryPie, VictoryChart, VictoryAxis, VictoryVoronoiContainer, VictoryLabel } from 'victory';\nimport summary from '../../data/Summary.json'\n\nconst colors = [\"#006D77\", \"#83C5BE\", \"#FFDDD2\", \"#79A1B9\", \"#393D3F\"];\n\nexport default class Archetypes extends Component {\n    render(){ \n        return <Container fluid>\n            <Row>\n                <Col>\n                    <VictoryChart \n                    containerComponent={<VictoryVoronoiContainer radius = {2}/>}\n                    style={{\n                        parent: {\n                        background: \"#FFFFFF\",\n                        borderRadius: \"6px\"\n                        }\n                    }}\n                    width={500}\n                    >\n                        <VictoryLabel \n                            text=\"Archetypes\" \n                            x={30} \n                            y={30} \n                            textAnchor=\"start\" \n                            style={{ \n                                fontSize: 20,\n                                fill: \"#393D3F\",\n                                fontFamily: \"Quicksand\",\n                                fontWeight: \"bold\"\n                            }}\n                        />\n                        <VictoryAxis style={{ \n                            axis: {stroke: \"transparent\"}, \n                            ticks: {stroke: \"transparent\"},\n                            tickLabels: { fill:\"transparent\"} \n                            }} \n                        />\n                        {summary.map(item => (\n                            <VictoryPie \n                                innerRadius={60} \n                                data={item.archetypes} \n                                colorScale={colors}\n                                style={{\n                                    labels: {\n                                        fontSize: 14,\n                                        fontFamily: \"Quicksand\"\n                                    }\n                                }}\n                            />\n                        ))}\n                    </VictoryChart>\n                </Col>\n            </Row>\n        </Container>\n    }\n}","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { VictoryStack, VictoryChart, VictoryBar, VictoryVoronoiContainer, VictoryAxis, VictoryLabel } from 'victory';\n\n// TODO: change font family of axis\n\nconst colors = [\"#006D77\", \"#83C5BE\", \"#FFDDD2\", \"#79A1B9\", \"#393D3F\"];\n\nconst summary = [{\"x\": \"Summary\", \"y\": 0.3, \"label\": \"Java\"}, {\"x\": \"Summary\", \"y\": 0.3, \"label\": \"SQL\"}, {\"x\": \"Summary\", \"y\": 0.2, \"label\": \"Tableau\"}, {\"x\": \"Summary\", \"y\": 0.2, \"label\": \"Python\"}]\n\nclass TechStack extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          filteredData: summary\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.data.tech){\n              this.setState({filteredData: nextProps.data.tech})\n          } else {\n              this.setState({filteredData: summary});\n          }\n    }\n\n    render(){\n        return <Container fluid>\n                <Row>\n                    <Col>\n                        <VictoryChart \n                            containerComponent={<VictoryVoronoiContainer radius = {2}/>}\n                            style={{\n                                parent: {\n                                background: \"#FFFFFF\",\n                                borderRadius: \"6px\"\n                                }\n                            }}\n                            width={500}\n                        >\n                        <VictoryLabel \n                            text=\"Tech Stack\" \n                            x={30} \n                            y={30} \n                            textAnchor=\"start\" \n                            style={{ \n                                fontSize: 20,\n                                fill: \"#393D3F\",\n                                fontFamily: \"Quicksand\",\n                                fontWeight: \"bold\"\n                            }}\n                        />\n                        <VictoryAxis />\n                            <VictoryStack\n                                domainPadding={{x: [0, 0], y: 10}}\n                            >\n                                {this.state.filteredData.map((entry, index) => (\n                                        <VictoryBar \n                                        barWidth={120}\n                                        data={this.state.filteredData.slice(index, index + 1)} \n                                        style={{\n                                            data: {\n                                                fill: colors[index]\n                                            },\n                                            labels: {\n                                                fontSize: 14,\n                                                fontFamily: \"Quicksand\"\n                                            }\n                                        }}\n                                        labelComponent={ \n                                            <VictoryLabel \n                                                dx={75} \n                                                dy={20}\n                                                textAnchor=\"start\"\n                                                verticalAnchor=\"middle\"\n                                            />\n                                        }\n                                            />\n                                    ))\n                                }\n                            </VictoryStack>\n                        </VictoryChart>\n                    </Col>\n                </Row>\n            </Container>\n    }\n}\n\nexport default TechStack","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Canvas.scss';\nimport Timeline from '../charts/Timeline';\nimport Archetypes from '../charts/Archetypes';\nimport TechStack from '../charts/TechStack';\n\n\nfunction Canvas() {\n  return (\n    <Container fluid className=\"Canvas\">\n      <Row className=\"Timeline\" id=\"Summary\">\n        <Col><Timeline /></Col>\n      </Row>\n      <Row className=\"RolesAndSkills\">\n        <Col><Archetypes /></Col>\n        <Col><TechStack /></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Canvas;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Header.scss';\n\n\nconst Header = () => (\n    <Container fluid className=\"HeaderContainer\">\n        <Row className=\"HeaderContent\">\n            <Col md={9} className=\"Title\">\n                <h1>SAMANTHA E. PETRIE</h1>\n                {/* <h5>Product Manager <span>&#183;</span> Data Analyst <span>&#183;</span> Enigmatologist</h5> */}\n            </Col>\n            <Col md={3}>\n                <button className=\"ContactButton\"><a href=\"mailto:hello@samepetrie.com\">Contact Sam</a>\n                </button>\n            </Col>\n        </Row>\n    </Container>\n)\n\nexport default Header","import React, {Component} from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip, VictoryLegend, VictoryVoronoiContainer, VictoryLabel } from 'victory';\nimport './App.scss';\nimport SidePanel from '../sidePanel/SidePanel';\nimport Canvas from '../canvas/Canvas';\nimport Header from '../canvas/Header';\nimport work from '../../data/Timeline.json';\nimport Archetypes from '../charts/Archetypes';\nimport TechStack from '../charts/TechStack';\nimport '../charts/Timeline.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.clicked = this.updateClicked.bind(this);\n    this.state = {\n      filteredData: {},\n      externalMutations: undefined\n    };\n  }\n\n  updateClicked(datum, index) {\n    this.setState({\n      filteredData: datum,\n      externalMutations: [\n        {\n          childName: \"timeline\",\n          target: [\"data\"],\n          eventKey: index.toString(),\n          mutation: () => ({style: {fill: \"#FFDDD2\", stroke:\"#393D3F\"}})\n        }\n      ]\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"AppContainer\" fluid>\n        <Row className=\"Header\">\n          <Col><Header /></Col>\n        </Row>\n        <Row className=\"Canvas\">\n          <Col id=\"canvas\">\n            <Container fluid className=\"Canvas\">\n              <Row className=\"Timeline\" id=\"Summary\">\n                <Col>\n                  <Container fluid>\n                    <Row className=\"TimelineChart\">\n                      <Col>\n                        <VictoryChart \n                          containerComponent={\n                            <VictoryVoronoiContainer \n                              radius = {2} \n                            />\n                          }\n                          style={{\n                            parent: {\n                              background: \"#FFFFFF\",\n                              borderRadius: \"6px\"\n                            }\n                          }}\n                          width={1000}\n                          externalEventMutations={this.state.externalMutations}\n                          events={[\n                            {\n                              target: \"data\",\n                              childName: \"timeline\",\n                              eventHandlers: {\n                                onClick: (event, data) => {\n                                  this.clicked(data.datum, data.index);\n                                  return [\n                                    {\n                                      target: \"data\",\n                                      eventKey: \"all\",\n                                      mutation: (props) => {\n                                        return props.datum.index === this ? {style: {fill:\"#FFDDD2\"}} : {style: undefined}\n                                      }\n                                    }\n                                  ]\n                                }\n                              }\n                            }\n                          ]}\n                          >\n                            <VictoryLabel \n                              text=\"Timeline\" \n                              x={30} \n                              y={30} \n                              textAnchor=\"start\" \n                              style={{ \n                                  fontSize: 20,\n                                  fill: \"#393D3F\",\n                                  fontFamily: \"Quicksand\",\n                                  fontWeight: \"bold\"\n                              }}\n                            />\n                          <VictoryLegend x={800} y={15}\n                            orientation=\"horizontal\"\n                            gutter={20}\n                            style={{ title: {fontSize: 14} }}\n                            data={[\n                              { name: \"Education\", symbol: { fill: \"#83C5BE\", type: \"square\"} },\n                              { name: \"Work\", symbol: { fill: \"#006D77\", type: \"square\"} },\n                            ]}\n                          />\n                          <VictoryAxis\n                            dependentAxis\n                            scale=\"time\"\n                            tickValues={\n                              [\n                                new Date(2014, 1, 1), \n                                new Date(2015, 1, 1), \n                                new Date(2016, 1, 1), \n                                new Date(2017, 1, 1), \n                                new Date(2018, 1, 1),\n                                new Date(2019, 1, 1),\n                                new Date(2020, 1, 1),\n                                new Date(2021, 1, 1)\n                              ]\n                            }\n                            tickFormat={\n                              (x) => { return x.getFullYear();\n                              }\n                            }\n                          />\n                          <VictoryBar\n                            name = \"timeline\"\n                            scale={{ x: \"linear\", y: \"time\" }}\n                            horizontal\n                            domain={{ y: [new Date(2014, 1, 1), new Date(2021, 1, 1)], x: [0, 3.5] }}\n                            data={work}\n                            style={{ \n                              data: { \n                                fill: ({ datum }) => datum.fill\n                              }, \n                              labels: {\n                                fontSize: 14,\n                                fill: \"#393D3F\",\n                                fontFamily: \"Quicksand\"\n                              }\n                            }}\n                            barWidth={15}\n                            x=\"category\"\n                            y={(d) => new Date(d.start_date)}\n                            y0={(d) => new Date(d.end_date)}\n                            labels={({ datum }) => `${datum.role} \\n ${datum.org}`}\n                            labelComponent={ \n                              <VictoryTooltip \n                                dy={15} \n                                constrainToVisibleArea\n                                orientation=\"bottom\" \n                                pointerLength={0}\n                                flyoutStyle={{ fill: \"#F4F4F9\", stroke: \"#006D77\"}}\n                              /> \n                            }\n                          />\n                        </VictoryChart>\n                      </Col>\n                    </Row>\n                  </Container>\n                </Col>\n              </Row>\n              <Row className=\"RolesAndSkills\">\n                <Col><Archetypes /></Col>\n                <Col><TechStack data={this.state.filteredData} /></Col>\n              </Row>\n            </Container>\n            {/* <Canvas data={this.state.filteredData} /> */}\n          </Col>\n          <Col id=\"sidePanel\">\n            <SidePanel data={this.state.filteredData} />\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default App;\n// ReactDOM.render(<App/>, mountNode)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}